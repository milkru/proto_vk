#version 450

#include "common.h"

layout(local_size_x = kShaderGroupSize) in;
layout(local_size_y = kShaderGroupSize) in;
layout(local_size_z = 1) in;

layout (binding = 0) uniform sampler2D inputTexture;
layout (binding = 1, r16f) writeonly uniform image2D outputTexture;

layout (push_constant) uniform block
{
    u32 hzbMipSize;
};

void main()
{
	iv2 position = min(iv2(gl_GlobalInvocationID.xy), iv2(hzbMipSize - 1)); 

	v2 uv = (0.5 + v2(position)) / f32(hzbMipSize);
	v4 depth = texture(inputTexture, uv);

	imageStore(outputTexture, position, depth);
}
